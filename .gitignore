abc-ci-builds

*.tar.gz

*.exe
src/bitcoin
src/dogecashd
src/dogecash-cli
src/dogecash-seeder
src/dogecash-tx
src/dogecash-chainstate
src/dogecash-wallet
src/test/test_bitcoin
src/test/test_bitcoin_fuzzy
src/qt/test/test_dogecash-qt

src/obj

src/qt/*.moc
src/qt/moc_*.cpp
src/qt/forms/ui_*.h

src/qt/test/moc*.cpp

src/qt/dogecash-qt.config
src/qt/dogecash-qt.creator
src/qt/dogecash-qt.creator.user
src/qt/dogecash-qt.files
src/qt/dogecash-qt.includes

.deps
.libs
.*.swp
*.*~*
*.bak
*.rej
*.orig
*.pyc
*.o
*.o-*
*.a
*.pb.cc
*.pb.h

*.log
*.trs
*.dmg

*.json.h
*.raw.h

# Only ignore unexpected patches
*.patch
!depends/patches/**/*.patch
!contrib/guix/**/*.patch

# Compilation and Qt preprocessor part
*.qm
Makefile
dogecash-qt
Dogecash-Qt.app

# Resources cpp
qrc_*.cpp

# Mac specific
.DS_Store
build

#lcov
*.gcno
*.gcda
/*.info

#build tests
test/config.ini
test/cache/*
*.mypy_cache/

!src/leveldb*/Makefile

contrib/devtools/split-debug.sh

# Ignore node_modules at every level
node_modules/

# Ignore secrets.js for JS apps that use secret keys, e.g. databases or telegram bots
secrets.js

# Local Netlify folder
.netlify

# arc liberate cache file
.phutil_module_cache

# GUIX
/output/
/var/
/distsrc-*/
web/e.cash/public/rss.xml
